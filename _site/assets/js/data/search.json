[
  
  {
    "title": "Tech Talk 0 Notes",
    "url": "/CSA-Data-Structures/posts/tt0/",
    "categories": "",
    "tags": "techtalks",
    "date": "2022-03-10 00:00:00 -0800",
    





    "snippet": "Intro  A data structure is a method of organizing data.  Think of algorithms as dynamic underlying pieces that interact with data structures. Together, data structures and algorithms combine and allow programmers to build whatever computer programs they’d like.Programming Paradigms  Imperative Paradigm          A programming paradigm that uses statements that change a program’s state.      Consists of a list of commands that describe how the program operates.        Object Oriented Paradigm          A programming paradigm that relies on the concept of classes and objects.      Used to structure a software program into simple, reusable pieces of code blueprints      Basic Data Structures:  Arrays          Linear data structure in which data is stored one after another. Iteration.        Hash Maps          Non-Linear data structure in which data is associated with a key when stored.      Challenge 1 - Menupublic static void menu() {    int selection = 0;    Scanner scan = new Scanner(System.in);    print_menu();    try {        selection = scan.nextInt();        clear();        if (selection == 0) {            scan.close();            System.exit(0);        } else if (prompts.containsKey(selection)) {            prompts.get(selection).run(prompts);        } else {            System.out.println(&quot;Invalid choice.&quot;);        }    } catch (Exception e) {        clear();        System.out.println(&quot;Invalid choice.&quot;);        scan.nextLine();    }    menu();}Challenge 2 - Int Referencepublic void swapToLowHighOrder() {    if (this.value &amp;gt; this.value2) {        this.value = this.value - this.value2;        this.value2 = this.value + this.value2;        this.value = this.value2 - this.value;    }}Challenge 3 - Matrixpublic String toString() {    StringBuilder sb = new StringBuilder();    for (int i = 0; i &amp;lt; matrix.length; i++) {        for (int j = 0; j &amp;lt; matrix[i].length; j++) {            if (matrix[i][j] == -1) {                sb.append(&quot;  &quot;);            } else {                sb.append(matrix[i][j] + &quot; &quot;);            }        }        sb.append(&quot;\\n&quot;);    }    sb.append(&quot;\\n&quot;);        for (int i = matrix.length - 1; i &amp;gt;= 0; i--) {        for (int j = matrix[i].length - 1; j &amp;gt;= 0; j--) {            if (matrix[i][j] == -1) {                sb.append(&quot;  &quot;);            } else {                sb.append(matrix[i][j] + &quot; &quot;);            }        }        sb.append(&quot;\\n&quot;);    }    return sb.toString();}"
  }
  
]

